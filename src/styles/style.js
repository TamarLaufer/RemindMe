import {StyleSheet} from 'react-native';
import sizes from '../utils/sizes';
import {RFPercentage, RFValue} from 'react-native-responsive-fontsize';

export const styles = StyleSheet.create({
  container: {
    width: sizes.PageWidth,
    height: sizes.PageHieght,
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  modalContainer: {
    flex: 1,
    flexWrap: 'wrap',
    justifyContent: 'center',
    alignItems: 'center',
    flexDirection: 'row',
    width: '90%',
    height: '90%',
  },
  settingsContainer: {
    flex: 1,
    flexWrap: 'wrap',
    maxHeight: 400,
    justifyContent: 'space-around',
    alignItems: 'center',
    paddingLeft: 200,
  },
  containerButtons: {
    marginTop: '2%',
  },
  bigButton: {
    width: sizes.PageWidth * 0.4,
    height: sizes.PageHieght * 0.12,
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 15,
    backgroundColor: '#83A3C2',
    margin: '1%',
    shadowOpacity: 0.8,
    elevation: 8,
    shadowColor: 'black',
    shadowOffset: {width: 2, height: -4},
    shadowRadius: 3,
  },
  bigName: {
    fontSize: RFValue(31, sizes.PageWidth),
    textAlign: 'center',
    color: '#EAEAEA',
  },
  heading: {
    fontSize: RFValue(12, sizes.PageHieght),
    fontWeight: '600',
    marginBottom: 13,
  },
  header: {
    fontSize: RFValue(15, sizes.PageHieght),
    color: '#3F4E4F',
    paddingBottom: 10,
  },
  image: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  shadowProp: {
    shadowColor: 'black',
    shadowOffset: {width: 2, height: -4},
    shadowOpacity: 2,
    shadowRadius: 3,
  },
  elevation: {
    elevation: 20,
    shadowColor: 'black',
  },
  buttonHover: {
    marginTop: 10,
    borderRadius: 25,
    paddingTop: 5,
    paddingBottom: 5,
    paddingLeft: 50,
    paddingRight: 50,
    shadowColor: 'rgba(46, 229, 157, 0.4)',
    shadowOpacity: 1.5,
    elevation: 8,
    shadowRadius: 20,
    shadowOffset: {width: 1, height: 13},
    backgroundColor: '#2EE59D',
    color: '#FFFFFF',
  },
  activeButton: {
    width: sizes.PageWidth * 0.15,
    height: sizes.PageHieght * 0.1,
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 12,
    backgroundColor: '#83A3C2',
    margin: '1%',
    padding: 1,
    shadowOpacity: 0.8,
    // elevation: 8,
    shadowColor: 'black',
    shadowOffset: {width: 2, height: -4},
    shadowRadius: 3,
  },
  notActiveButton: {
    width: sizes.PageWidth * 0.15,
    height: sizes.PageHieght * 0.1,
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 12,
    margin: '1%',
    shadowOpacity: 0.8,
    // elevation: 8,
    shadowColor: 'black',
    shadowOffset: {width: 2, height: -4},
    shadowRadius: 3,
    backgroundColor: '#fff',
  },
  childName: {
    fontSize: RFValue(15, sizes.PageHieght),
    textAlign: 'center',
    color: '#EAEAEA',
  },
  bigButtonFormik: {
    width: sizes.PageWidth * 0.9,
    height: sizes.PageHieght * 0.1,
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 30,
    backgroundColor: '#83A3C2',
    margin: 11,
    shadowOpacity: 0.8,
    elevation: 8,
    shadowColor: 'black',
    shadowOffset: {width: 2, height: -4},
    shadowRadius: 3,
  },
  bigButtonFormikNotActive: {
    backgroundColor: '#D8D8D8',
  },
  input: {
    width: sizes.PageWidth * 0.9,
    height: sizes.PageHieght * 0.09,
    borderWidth: 1,
    borderColor: 'black',
    padding: '1%',
    borderRadius: 26,
    fontSize: RFValue(20, sizes.PageHieght),
    margin: '0.02%',
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 1,
    },
    shadowOpacity: 0.22,
    shadowRadius: 2.22,
  },

  centeredViewLoader: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    zIndex: 1,
  },
  modalView: {
    width: sizes.PageWidth,
    backgroundColor: 'white',
    borderRadius: 20,
    padding: 5,
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.25,
    shadowRadius: 4,
    elevation: 5,
  },
  modalButton: {
    borderRadius: 20,
    width: sizes.PageWidth * 0.97,
    height: sizes.PageHieght * 0.07,
    // alignSelf: '',
    padding: 10,
    fontSize: RFValue(30, sizes.PageHieght),
  },
  buttonClose: {
    backgroundColor: '#2196F3',
  },
  close: {
    color: 'black',
    fontWeight: 'bold',
    textAlign: 'right',
    fontSize: RFValue(18, sizes.PageHieght),
  },
  modalText: {
    marginBottom: 5,
    textAlign: 'center',
  },
  logoSize: {
    maxWidth: sizes.PageWidth * 0.2,
    maxHeight: sizes.PageHieght * 0.2,
    marginLeft: '10%',
    marginBottom: '7%',
  },
  // logoSizeContent: {
  //   width: sizes.PageWidth * 0.15,
  //   height: sizes.PageHieght * 0.15,
  //   marginLeft: '1%',
  //   marginBottom: '0.2%',
  // },
  headerStyle: {
    backgroundColor: '#F4F4F2',
    shadowColor: '#000',
    shadowOffset: {width: 2, height: 5},
    shadowOpacity: 0.3,
    shadowRadius: 2,
    height: sizes.PageHieght * 0.15,
  },
  dropdown: {
    marginTop: 10,
    width: sizes.PageWidth * 0.9,
    height: 75,
    borderColor: 'black',
    borderWidth: 1,
    borderRadius: 26,
    paddingHorizontal: 8,
    marginLeft: 8,
  },
  icon: {
    marginRight: 5,
  },
  label: {
    zIndex: 999,
    paddingHorizontal: 8,
    fontSize: RFValue(24, sizes.PageHieght),
    borderColor: 'black',
    borderWidth: 1,
  },
  placeholderStyle: {
    fontSize: RFValue(17, sizes.PageHieght),
  },
  selectedTextStyle: {
    fontSize: RFValue(16, sizes.PageHieght),
  },
  iconStyle: {
    width: 40,
    height: 40,
  },
  inputSearchStyle: {
    width: 1000,
    height: 75,
    fontSize: RFValue(22, sizes.PageHieght),
  },
  validation_error: {
    color: 'red',
    fontSize: RFValue(12, sizes.PageHieght),
    marginRight: 23,
  },
  keyboardAwareScrollView: {
    flex: 1,
    flexDirection: 'column',
    justifyContent: 'center',
  },
  addContainer: {
    flex: 1,
    paddingBottom: 15,
    alignItems: 'center',
  },
});
